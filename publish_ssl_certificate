#!/bin/bash
# Publish the CoGs Site SSL certifcates to the router (as I can't find a way for SSL 
# certicate queries to pass through the router to the web server)

# There are two files that are need on the web server:
#
#		ssl.ca-file             = "/etc/letsencrypt/live/leaderboard.space/chain.pem"
#		ssl.pemfile             = "/etc/letsencrypt/live/leaderboard.space/combined.pem"
#
# These two we want to replciate on the router. 
#
# The second one is a concatination of:
#
#	/etc/letsencrypt/live/leaderboard.space/privkey.pem
#	/etc/letsencrypt/live/leaderboard.space/cert.pem
#
# And so after a renweal (which produces three files) we concatenate these two.
#
# This file is for use on the Development platform. It sees the webserver and the router.
#
# publish_ssl_certificate_auto is the companion script for installing as a deploy hook under
# certbot on the webserver.

files=(live/leaderboard.space/chain.pem live/leaderboard.space/combined.pem)
combine=(live/leaderboard.space/privkey.pem live/leaderboard.space/cert.pem live/leaderboard.space/combined.pem)

# To mount the router and webserver we need to have SSH access and SSH keys installed
# as we'll use sshfs to mount them if needed
rsa_file=/home/bernd/.ssh/id_rsa

# The web server configs
server=Arachne
server_mount_dir=/home/bernd/Mounts/leaderboard.space.ssl_source
server_account=weaver@arachne.lan
server_dir=/etc/letsencrypt/

# The router server configs
router=Cerberus
router_mount_dir=/home/bernd/Mounts/leaderboard.space.ssl_target
router_account=root@cerberus.lan
router_dir=/etc/letsencrypt/

# Ensure the server is properly mounted (or we can't find teh SSL certificates)
mountpoint -q $server_mount_dir
if [ $? != 0 ];then
	if [ ! -d $server_mount_dir ]; then
		echo Creating $router_mount_dir ...
	  mkdir -p $server_mount_dir
	fi

	echo Mounting $server_mount_dir ...
	sshfs -o IdentityFile=$rsa_file $server_account:$server_dir $server_mount_dir
fi

# Combine the certificates in a way that lighttpd requires
echo "Combining certificates for lighttpd ..."
cat $server_mount_dir/${combine[0]} $server_mount_dir/${combine[1]} > $server_mount_dir/${combine[2]}

# Ensure the router is properly mounted (or we can't publish to them)
mountpoint -q $router_mount_dir
if [ $? != 0 ];then
	if [ ! -d $router_mount_dir ]; then
		echo Creating $router_mount_dir ...
	  mkdir -p $router_mount_dir
	fi

	echo Mounting $router_mount_dir ...
	sshfs -o IdentityFile=$rsa_file $router_account:$router_dir $router_mount_dir
fi

# Now publish the SSL certificate from the server to the router
echo Copying SSL certificates from $server to $router ...
for file in ${files[@]}; do
	target_dir="$router_mount_dir/$(dirname $file)"
	if [ ! -d $target_dir ]; then
		echo Creating $target_dir ...
	  mkdir -p $target_dir
	fi

	cp -L $server_mount_dir/$file $router_mount_dir/$file
done

# For new certificates to take effect the lighttpd server on the router has to be restarted (alas).
ssh -o IdentityFile=$rsa_file $router_account /etc/init.d/lighttpd restart

echo Done.
