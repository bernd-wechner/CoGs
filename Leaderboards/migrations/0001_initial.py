# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-02 10:06
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name of the Game')),
                ('BGGid', models.PositiveIntegerField(verbose_name='BoardGameGeek ID')),
                ('trueskill_tau', models.FloatField(default=0.08333333333333334, verbose_name='TrueSkill Dynamics Factor (τ)')),
                ('trueskill_p', models.FloatField(default=0.1, verbose_name='TrueSkill Draw Probability (p)')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name of the League')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name of the location')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partial_play_weighting', models.FloatField(default=1, verbose_name='Partial Play Weighting (ω)')),
                ('trueskill_mu_before', models.FloatField(default=25.0, editable=False, verbose_name='Trueskill Mean (µ) before the session.')),
                ('trueskill_sigma_before', models.FloatField(default=8.333333333333334, editable=False, verbose_name='Trueskill Standard Deviation (σ) before the session.')),
                ('trueskill_eta_before', models.FloatField(default=0, editable=False, verbose_name='Trueskill Rating (η) before the session.')),
                ('trueskill_mu_after', models.FloatField(default=25.0, editable=False, verbose_name='Trueskill Mean (µ) after the session.')),
                ('trueskill_sigma_after', models.FloatField(default=8.333333333333334, editable=False, verbose_name='Trueskill Standard Deviation (σ) after the session.')),
                ('trueskill_eta_after', models.FloatField(default=0, editable=False, verbose_name='Trueskill Rating (η) after the session.')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_nickname', models.CharField(max_length=200, verbose_name='Nickname')),
                ('name_personal', models.CharField(max_length=200, verbose_name='Personal Name')),
                ('name_family', models.CharField(max_length=200, verbose_name='Family Name')),
                ('email_address', models.EmailField(blank=True, max_length=254, verbose_name='Email Address')),
                ('BGGname', models.CharField(blank=True, default='', max_length=200, verbose_name='BoardGameGeek Name')),
                ('is_registrar', models.BooleanField(default=False, verbose_name='Authorised to record session results?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Authorised to access the admin site?')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players_created', to='Leaderboards.Player')),
                ('last_edited_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players_last_edited', to='Leaderboards.Player')),
                ('leagues', models.ManyToManyField(blank=True, related_name='players_in_league', to='Leaderboards.League')),
            ],
            options={
                'ordering': ['name_nickname'],
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ranks_created', to='Leaderboards.Player')),
                ('last_edited_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ranks_last_edited', to='Leaderboards.Player')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to='Leaderboards.Player')),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trueskill_mu', models.FloatField(default=25.0, editable=False, verbose_name='Trueskill Mean (µ)')),
                ('trueskill_sigma', models.FloatField(default=8.333333333333334, editable=False, verbose_name='Trueskill Standard Deviation (σ)')),
                ('trueskill_eta', models.FloatField(default=8.333333333333334, editable=False, verbose_name='Trueskill Rating (η)')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_created', to='Leaderboards.Player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='Leaderboards.Game')),
                ('last_edited_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_last_edited', to='Leaderboards.Player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='Leaderboards.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(default=datetime.datetime(2016, 10, 2, 10, 6, 10, 666115))),
                ('team_play', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions_created', to='Leaderboards.Player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='Leaderboards.Game')),
                ('last_edited_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions_last_edited', to='Leaderboards.Player')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='Leaderboards.League')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='Leaderboards.Location')),
            ],
            options={
                'ordering': ['date_time'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Name of the Team (optional)')),
                ('created_on', models.DateTimeField(editable=False, null=True)),
                ('last_edited_on', models.DateTimeField(editable=False, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams_created', to='Leaderboards.Player')),
                ('last_edited_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams_last_edited', to='Leaderboards.Player')),
                ('players', models.ManyToManyField(blank=True, editable=False, related_name='member_of_teams', to='Leaderboards.Player')),
            ],
        ),
        migrations.CreateModel(
            name='TrueskillSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mu0', models.FloatField(default=25.0, verbose_name='TrueSkill Initial Mean (µ0)')),
                ('sigma0', models.FloatField(default=8.333333333333334, verbose_name='TrueSkill Initial Standard Deviation (σ0)')),
                ('beta', models.FloatField(default=4.166666666666667, verbose_name='TrueSkill Skill Factor (ß)')),
                ('delta', models.FloatField(default=0.0001, verbose_name='TrueSkill Delta (δ)')),
            ],
            options={
                'verbose_name_plural': 'Trueskill settings',
            },
        ),
        migrations.AddField(
            model_name='rank',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to='Leaderboards.Session'),
        ),
        migrations.AddField(
            model_name='rank',
            name='team',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to='Leaderboards.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='teams',
            field=models.ManyToManyField(blank=True, editable=False, related_name='players_in_team', to='Leaderboards.Team'),
        ),
        migrations.AddField(
            model_name='performance',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances_created', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='performance',
            name='last_edited_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performances_last_edited', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='performance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='performance',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='Leaderboards.Session'),
        ),
        migrations.AddField(
            model_name='location',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations_created', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='location',
            name='last_edited_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations_last_edited', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='location',
            name='leagues',
            field=models.ManyToManyField(blank=True, related_name='Locations_used', to='Leaderboards.League'),
        ),
        migrations.AddField(
            model_name='league',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leagues_created', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='league',
            name='games',
            field=models.ManyToManyField(blank=True, related_name='played_by_leagues', to='Leaderboards.Game'),
        ),
        migrations.AddField(
            model_name='league',
            name='last_edited_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leagues_last_edited', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='league',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='leagues_playing_here', to='Leaderboards.Location'),
        ),
        migrations.AddField(
            model_name='league',
            name='manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leagues_managed', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='league',
            name='players',
            field=models.ManyToManyField(blank=True, related_name='member_of_leagues', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_created', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='last_edited_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_last_edited', to='Leaderboards.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='leagues',
            field=models.ManyToManyField(blank=True, related_name='games_played', to='Leaderboards.League'),
        ),
    ]
