#!/bin/bash
##############################################################################################################################
# Publish the leaderboard.space Site SSL certificates to the router 
# (as I can't find a way for SSL certicate queries to pass through the router to the web server)
#
# Webserver Script: This is designed to run on the webserver with router remote and be run as a certbot post renewal hook.
#
# There are two files that are needed on the web server:
#
#		ssl.ca-file             = "/etc/letsencrypt/live/domain/chain.pem"
#		ssl.pemfile             = "/etc/letsencrypt/live/domain/combined.pem"
#
# These two we want to replicate on the router. 
# The second one is a concatination of:
#
#	/etc/letsencrypt/live/domain/privkey.pem
#	/etc/letsencrypt/live/domain/cert.pem
#
# And so after a renweal (which produces three files) we concatenate these two.
#
# This should be deployed in:
#   /etc/letsencrypt/renewal-hooks/deploy
# so certbot runs it after renewing the certs. 
#
# See: https://media.readthedocs.org/pdf/letsencrypt/latest/letsencrypt.pdf
##############################################################################################################################
## CONFIGURATION

files=(live/leaderboard.space/chain.pem live/leaderboard.space/combined.pem)
combine=(live/leaderboard.space/privkey.pem live/leaderboard.space/cert.pem live/leaderboard.space/combined.pem)

# Identify the server we're running on and the home user from that
host=`hostname`
if [ $host == "shelob" ];then
	user="sting"
elif [ $host == "arachne" ];then
	user="weaver"
fi

##############################################################################################################################
## DO THE WORK
 
# To mount the router and webserver we need to have SSH access and SSH keys installed
# as we'll use sshfs to mount them if needed
rsa_file=/home/$user/.ssh/id_rsa

# The web server configs
server_dir=/etc/letsencrypt

# The router configs
router=Cerberus
router_mount_dir=/home/$user/Mounts/certificates
router_account=root@cerberus.lan
router_dir=/etc/letsencrypt

# Combine the certificates in a way that lighttpd requires (before copying)
echo "Combining certificates for lighttpd ..."
cat $server_dir/${combine[0]} $server_dir/${combine[1]} > $server_dir/${combine[2]}

# Ensure the router is properly mounted (or we can't publish to them)
# -q sets status to 1 if it's a dir and 0 if it's a mountpoint
mountpoint -q $router_mount_dir
if [ $? != 0 ];then
	if [ ! -d $router_mount_dir ]; then
		echo Creating $router_mount_dir ...
	  mkdir -p $router_mount_dir
	fi

	echo Mounting $router_mount_dir ...
	sshfs -o IdentityFile=$rsa_file $router_account:$router_dir $router_mount_dir
fi

# Now publish the SSL certificate from the server to the router
echo Copying SSL certificates to $router ...
for file in ${files[@]}; do
	target_dir="$router_mount_dir/$(dirname $file)"
	if [ ! -d $target_dir ]; then
		echo Creating $target_dir ...
	  mkdir -p $target_dir
	fi

	cp -L $server_dir/$file $router_mount_dir/$file
done

# For new certificates to take effect the lighttpd server on the router has to be restarted (alas).
ssh -o IdentityFile=$rsa_file $router_account /etc/init.d/lighttpd restart

echo Done.